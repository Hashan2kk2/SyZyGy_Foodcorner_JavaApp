/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.apx.syzygy.gui;

import com.apx.syzygy.components.TableDesign;
import com.apx.syzygy.models.MySql;
import com.apx.syzygy.process.FoodOrder;
import java.awt.Color;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.util.HashMap;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 *
 * @author vidhu
 */
public class Breakfast extends javax.swing.JPanel {

    DefaultTableModel dtm;

    int ingrediantRowCount = 0;
    private ArrayList<JCheckBox> ingredientsBoxes;
    JCheckBox[] ingredientsBoxArray;

    int toppingsRowCount = 0;
    private ArrayList<JCheckBox> toppingsBoxes;
    JCheckBox[] toppingsBoxArray;

    DecimalFormat decimalFormatter = new DecimalFormat("0.00");

    public static HashMap<String, Double> toppingsMap = new HashMap<>();

    public Breakfast() {
        initComponents();

        ArrayList expectedColumns = new ArrayList();
        expectedColumns.add(2);

        TableDesign.tableDesign(jTable1, expectedColumns);
        loadDetails();
        loadIngrediants();
        loadToppings();

    }

    public void loadDetails() {

        try {

            ResultSet rs = MySql.search("SELECT * FROM products INNER JOIN category ON products.category_id = category.id WHERE category.`name`='Breakfast' ORDER BY products.`name` ASC");
            dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);

            while (rs.next()) {
                Vector data = new Vector();
                data.add(rs.getString("name"));
                data.add(rs.getString("description"));
                data.add(decimalFormatter.format(Double.parseDouble(rs.getString("price"))));
                dtm.addRow(data);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void loadIngrediants() {

        jPanel1.removeAll();
        GridLayout layout = (GridLayout) jPanel1.getLayout();

        try {

            ResultSet rs = MySql.search("SELECT * FROM ingrediants INNER JOIN category ON ingrediants.category_id = category.id WHERE category.`name`='Breakfast' ORDER BY ingrediants.`name` ASC");

            ingredientsBoxes = new ArrayList<>();

            while (rs.next()) {
                ingrediantRowCount = ingrediantRowCount + 1;

                JCheckBox ingBox = new JCheckBox(rs.getString("name") + " - Rs." + rs.getString("price") + "0");
                jPanel1.add(ingBox);
                ingredientsBoxes.add(ingBox);
            }

            ingredientsBoxArray = ingredientsBoxes.toArray(new JCheckBox[0]);
            layout.setRows(ingrediantRowCount);

        } catch (Exception e) {
            e.printStackTrace();
        }

        jPanel1.revalidate();
        jPanel1.repaint();

    }

    public void loadToppings() {

        jPanel2.removeAll();
        GridLayout layout = (GridLayout) jPanel2.getLayout();

        try {

            ResultSet rs = MySql.search("SELECT * FROM toppings INNER JOIN category ON toppings.category_id = category.id WHERE category.`name`='Breakfast' ORDER BY toppings.`name` ASC");

            toppingsBoxes = new ArrayList<>();

            while (rs.next()) {
                toppingsRowCount = toppingsRowCount + 1;

                toppingsMap.put(rs.getString("name"), Double.valueOf(rs.getString("price")));

                Vector data = new Vector();
                data.add(rs.getString("name"));
                data.add(rs.getString("price"));
                data.add(rs.getString("toppings.name"));

                JCheckBox ingBox = new JCheckBox(rs.getString("name") + " - Rs." + rs.getString("price") + "0");
                jPanel2.add(ingBox);
                toppingsBoxes.add(ingBox);
            }

            toppingsBoxArray = toppingsBoxes.toArray(new JCheckBox[0]);
            layout.setRows(toppingsRowCount);

        } catch (Exception e) {
            e.printStackTrace();
        }

        jPanel2.revalidate();
        jPanel2.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        kGradientPanel2 = new com.k33ptoo.components.KGradientPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        kGradientPanel4 = new com.k33ptoo.components.KGradientPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel1.setText("Breakfast");

        jTable1.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Description", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(219, 232, 255));
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        jButton1.setBackground(new java.awt.Color(236, 237, 253));
        jButton1.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(99, 102, 241));
        jButton1.setText("Add Item");
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        kGradientPanel1.setkBorderRadius(30);
        kGradientPanel1.setkEndColor(new java.awt.Color(249, 249, 249));
        kGradientPanel1.setkStartColor(new java.awt.Color(249, 249, 249));
        kGradientPanel1.setOpaque(false);

        jTextField1.setBackground(new java.awt.Color(255, 153, 153,1));
        jTextField1.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1.setText("Search Breakfast");
        jTextField1.setBorder(null);
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/apx/syzygy/img/icons/search icon.png"))); // NOI18N

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                .addContainerGap())
        );

        kGradientPanel2.setkBorderRadius(15);
        kGradientPanel2.setkEndColor(new java.awt.Color(249, 249, 249));
        kGradientPanel2.setkStartColor(new java.awt.Color(249, 249, 249));
        kGradientPanel2.setOpaque(false);

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel3.setText("Ingrediants");

        jScrollPane2.setBorder(null);

        jPanel1.setBackground(new java.awt.Color(249, 249, 249));
        jPanel1.setLayout(new java.awt.GridLayout(10, 1, 0, 2));
        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addContainerGap(128, Short.MAX_VALUE))
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addContainerGap())
        );

        kGradientPanel4.setkBorderRadius(15);
        kGradientPanel4.setkEndColor(new java.awt.Color(249, 249, 249));
        kGradientPanel4.setkStartColor(new java.awt.Color(249, 249, 249));
        kGradientPanel4.setOpaque(false);

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel5.setText("Toppings");

        jScrollPane3.setBorder(null);

        jPanel2.setBackground(new java.awt.Color(249, 249, 249));
        jPanel2.setLayout(new java.awt.GridLayout(10, 1, 0, 2));
        jScrollPane3.setViewportView(jPanel2);

        javax.swing.GroupLayout kGradientPanel4Layout = new javax.swing.GroupLayout(kGradientPanel4);
        kGradientPanel4.setLayout(kGradientPanel4Layout);
        kGradientPanel4Layout.setHorizontalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel4Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel5)
                .addContainerGap(143, Short.MAX_VALUE))
            .addGroup(kGradientPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        kGradientPanel4Layout.setVerticalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(kGradientPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kGradientPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int selectedRow = jTable1.getSelectedRow();

        double totalIngrediantPrice = 0.0;
        double totalToppingPrice = 0.0;

        ArrayList<String> ingrediantsNames = new ArrayList<>();
        ArrayList<String> toppingsNames = new ArrayList<>();

        for (JCheckBox inBox : ingredientsBoxArray) {
            if (inBox.isSelected()) {
                String[] content = inBox.getText().split(" - Rs.");
                double price = Double.parseDouble(content[1].trim());
                totalIngrediantPrice += price;
                ingrediantsNames.add(content[0].trim());
            }
        }

        for (JCheckBox topBox : toppingsBoxArray) {
            if (topBox.isSelected()) {
                String[] content = topBox.getText().split(" - Rs.");
                double price = Double.parseDouble(content[1].trim());
                totalToppingPrice += price;
                toppingsNames.add(content[0].trim());
            }
        }

        String allIngrediants = String.join(",", ingrediantsNames);
        String allToppings = String.join(",", toppingsNames);

        if (selectedRow != -1) {

            String name = jTable1.getValueAt(selectedRow, 0).toString();
            String itemPrice = jTable1.getValueAt(selectedRow, 2).toString();

            double grandTotal = Double.parseDouble(itemPrice) + totalIngrediantPrice + totalToppingPrice;

            FoodOrder.Builder foodOrderBuilder = new FoodOrder.Builder();

            FoodOrder order = foodOrderBuilder
                    .setFoodName(name)
                    .setIngrediants(ingrediantsNames)
                    .setToppings(toppingsNames)
                    .setPrice(grandTotal)
                    .build();

            System.out.println(order);

            DefaultTableModel dtm = (DefaultTableModel) Ordering.summeryTable.getModel();

            Vector data = new Vector();
            data.add(name); // item name
            data.add(decimalFormatter.format(Double.parseDouble(itemPrice))); // unit price
            data.add(1); // item qty
            data.add(decimalFormatter.format(Double.parseDouble(itemPrice))); // total x qty

            if (allIngrediants.isEmpty()) {
                data.add("-"); // ingrediants names
            } else {
                data.add(allIngrediants); // ingrediants names
            }

            data.add(decimalFormatter.format(totalIngrediantPrice));

            if (allToppings.isEmpty()) {
                data.add("-"); // toppings names
            } else {
                data.add(allToppings); // toppings names
            }

            data.add(decimalFormatter.format(totalToppingPrice)); // extra toppings price
            data.add(decimalFormatter.format(grandTotal)); // grand total

            dtm.addRow(data);

        } else {
            JOptionPane.showMessageDialog(this, "Please select a food item", "Warning", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusGained

        if (jTextField1.getText().equals("Search Breakfast")) {
            jTextField1.setText("");
            jTextField1.setForeground(Color.BLACK);
        }

    }//GEN-LAST:event_jTextField1FocusGained

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1FocusLost

        if (jTextField1.getText().equals("")) {
            jTextField1.setText("Search Breakfast");
            jTextField1.setForeground(new Color(153, 153, 153));
        }

    }//GEN-LAST:event_jTextField1FocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private com.k33ptoo.components.KGradientPanel kGradientPanel2;
    private com.k33ptoo.components.KGradientPanel kGradientPanel4;
    // End of variables declaration//GEN-END:variables
}
